.model small
.STACK 100H 
.data
    MATRIZ1resp db 5,3,4,6,7,8,9,1,2        ;MATRIZ RESPOSTA DO JOGO 1
                db 6,7,2,1,9,5,3,4,8
                db 1,9,8,3,4,2,5,6,7
                db 8,5,9,7,6,1,4,2,3
                db 4,2,6,8,5,3,7,9,1
                db 7,1,3,9,2,4,8,5,6
                db 9,6,1,5,3,7,2,8,4
                db 2,8,7,4,1,9,6,3,5
                db 3,4,5,2,8,6,1,7,9
    
    MATRIZ1aux  db 1,1,0,0,1,0,0,0,0        ;MATRIZ PARA SABER QUAIS POSIÇÕES PODEM SER ALTERADAS
                db 1,0,0,1,1,1,0,0,0
                db 0,1,1,0,0,0,0,1,0
                db 1,0,0,0,1,0,0,0,1
                db 1,0,0,1,0,1,0,0,1
                db 1,0,0,0,1,0,0,0,1
                db 0,1,0,0,0,0,1,1,0
                db 0,0,0,1,1,1,0,0,1
                db 0,0,0,0,1,0,0,1,1

    MATRIZ1     db 5,3,'?','?',7,'?','?','?','?'        ;MATRIZ QUE VAI SER MOSTRADA PARA O JOGADOR COMPLETAR NO JOGO 1
                db 6,'?','2',1,9,5,'?','?','?'
                db '?',9,8,'?','?','?','?',6,'?'
                db 8,'?','?','?',6,'?','?','?',3
                db 4,'?','?',8,'?',3,'?','?',1
                db 7,'?','?','?',2,'?','?','?',1
                db '?',6,'?','?','?','?',2,4,'?'
                db '?','?','?',4,1,9,'?','?',5
                db '?''?','?','?',8,'?','?',7,9

    MATRIZ2resp db 9,6,3,1,7,4,2,5,8            ;MATRIZ RESPOSTA DO JOGO 2
                db 1,7,8,3,2,5,6,4,9
                db 2,5,4,6,8,9,7,3,1
                db 8,2,1,4,3,7,5,9,6
                db 4,9,6,8,5,2,3,1,7
                db 7,3,5,9,6,1,8,2,4
                db 5,8,9,7,1,3,4,6,2
                db 3,1,7,2,4,6,9,8,5
                db 6,4,2,5,9,8,1,7,3

    MATRIZ2aux  db 0,1,0,1,0,1,0,1,0            ;MATRIZ PARA SABER QUAIS POSIÇÕES PODEM SER ALTERADAS
                db 0,0,1,1,0,1,0,0,0
                db 1,0,0,0,0,0,0,0,1
                db 1,0,0,1,0,1,0,0,1
                db 0,0,1,0,0,0,1,0,0
                db 1,0,0,1,0,1,0,0,1
                db 1,0,0,0,0,0,0,0,1
                db 0,0,1,1,0,1,1,0,0
                db 0,1,1,1,0,1,0,1,0

    MATRIZ2     db '?',6,'?',1,'?',4,'?',5,'?'          ;MATRIZ QUE VAI SER MOSTRADA PARA O JOGADOR COMPLETAR NO JOGO 2
                db '?','?',8,3,'?',5,6,'?','?'
                db 2,'?','?','?','?','?','?','?',1
                db 8,'?','?',4,'?',7,'?','?',6
                db '?','?',6,'?','?','?',3,'?','?'
                db 7,'?','?',9,'?',1,'?','?',4
                db 5,'?','?','?','?','?','?','?',2
                db '?','?',7,2,'?',6,9,'?','?'
                db '?',4,'?',5,'?',8,'?',7,'?'

    MATRIZ3resp db 8,7,6,5,4,3,1,9,2
                db 5,4,3,2,1,9,7,6,8
                db 2,1,9,8,7,6,4,3,5
                db 1,9,8,7,6,5,3,2,4
                db 4,3,2,1,9,8,6,5,7
                db 7,6,5,4,3,2,9,8,1
                db 3,2,1,9,8,7,5,4,6
                db 6,5,4,3,2,1,8,7,9
                db 9,8,7,6,5,4,2,1,3

    MATRIZ3aux  db 1,0,1,0,0,1,0,1,0
                db 0,1,0,0,1,0,0,1,1
                db 1,0,0,1,1,0,0,0,1
                db 1,0,1,0,0,1,0,1,0
                db 0,1,0,1,0,0,0,1,0
                db 1,0,1,0,1,0,1,0,0
                db 0,1,1,0,0,1,0,1,0
                db 1,0,0,0,1,0,1,0,0
                db 0,1,1,1,0,1,0,0,1

    MATRIZ3     db 8,'?',6,'?','?',3,'?',9,'?'
                db '?',4,'?','?',1,'?','?',6,8
                db 2,'?','?',8,7,'?','?','?',5
                db 1,'?',8,'?','?',5,'?',2,'?'
                db '?',3,'?',1,'?','?','?',5,'?'
                db 7,'?',5,'?',3,'?',9,'?','?'
                db '?',2,1,'?','?',7,'?',4,'?'
                db 6,'?','?','?',2,'?',8,'?','?'
                db '?',8,7,6,'?',4,'?','?',3

    MAC DB 2 DUP(?)
    msg DB 10, "Qual jogo deseja jogar?(1, 2 OU 3): $"
    msg1 DB 10, "Digite a posicao ", 10, "Linha: $"
    msg2 DB 10, "Coluna: $"
    msg3 DB 10, 10, "Digite o valor para inserir: $"
    msg4 DB 10, "Resposta certa! Continue assim!",10,'$'
    msg5 DB 10, "Resposta errada! Tente outra vez.$"
    msgfim DB 10,"Parabens! Voce conclui o Sudoku!$"
    alert DB 10,"Essa posicao nao pode ser alterada! Tente de novo!$"

.CODE
    TIPOJOGO MACRO          ;FUNÇÃO DE IDENTIFICAR QUAL JOGO IRÁ SER EXECUTADO
    MOV AH,09
    LEA DX,msg
    INT 21H
    MOV AH,01
    INT 21H
    AND AL, 0FH
    ENDM

    RETORNO MACRO           ;FUNÇÃO DE REALIZAR A FUNÇÃO INT 21H DE RETORNO
    MOV AH,4Ch
    INT 21H
    ENDM

    SALVA_REGS MACRO R1,R2,R3   ;FUNÇÃO DE SALVAR OS VALORES INICIAIS DOS REGISTRADORES UTILIZADOS DENTRO DO PROCEDIMENTO
    PUSH R1
    PUSH R2
    PUSH R3
    ENDM

    RESTAURA_REGS MACRO S1,S2,S3    ;FUNÇÃO DE RESTAURAR OS VALORES INICIAIS DOS REGISTRADORES UTILIZADOS DENTRO DO PROCEDIMENTO
    POP S1
    POP S2
    POP S3
    ENDM

MAIN PROC

    MOV AX,3            ;FUNÇÃO INT 10H QUE LIMPA A TELA DE EXECUÇÃO
    INT 10H  
    MOV AX,@DATA        ;INICIALIZAÇÃO DO DATA
    MOV DS,AX
    TIPOJOGO            ;MACRO TIPOJOGO
    CMP AL,1            ;COMPARAÇÃO PARA MANDAR PARA O INÍCIO DE CADA JOGO
    JE JOGO1
    CMP AL,2
    JE JOGO2
    CMP AL,3
    JE JOGO3       
    JOGO1:
    CALL GAME           ;IMPRESSÃO DA MATRIZ 9X9 DO JOGO 1      
    CALL SUAVEZ         ;LEITURA DE LINHA,COLUNA E VALOR A SER ALTERADO
    CMP AL,13           ;COMPARAÇÃO PARA O TÉRMINO DO JOGO
    JE FIM
    CALL VERIFICACAO    ;VERIFICA A MATRIZ GABARITO (JOGO 1)  COM O VALOR INSERIDO PELO JOGADOR    
    JMP JOGO1           ;LOOP DO JOGO 1 PARA O JOGADOR CONSEGUIR CONTINUAR A JOGAR
    JOGO2:
    CALL GAME2          ;IMPRESSÃO DA MATRIZ 9X9 DO JOGO 2
    CALL SUAVEZ2        ;LEITURA DE LINHA,COLUNA E VALOR A SER ALTERADO
    CMP AL,13           ;COMPARAÇÃO PARA O TÉRMINO DO JOGO
    JE FIM
    CALL VERIFICACAO2   ;VERIFICA A MATRIZ GABARITO (JOGO 2) COM O VALOR INSERIDO PELO JOGADOR
    JMP JOGO2           ;LOOP DO JOGO 2 PARA O JOGADOR CONSEGUIR CONTINUAR A JOGAR
    JOGO3:
    CALL GAME3          ;IMPRESSÃO DA MATRIZ 9X9 DO JOGO 2
    CALL SUAVEZ3        ;LEITURA DE LINHA,COLUNA E VALOR A SER ALTERADO
    CMP AL,13           ;COMPARAÇÃO PARA O TÉRMINO DO JOGO
    JE FIM
    CALL VERIFICACAO3   ;VERIFICA A MATRIZ GABARITO (JOGO 2) COM O VALOR INSERIDO PELO JOGADOR
    JMP JOGO3           ;LOOP DO JOGO 2 PARA O JOGADOR CONSEGUIR CONTINUAR A JOGAR
    
    FIM:
    MOV AH,09           ;IMPRIME A MENSAGEM DE FINALIZAÇÃO DO JOGO
    LEA DX,msgfim
    INT 21H
    RETORNO             ;MACRO RETORNO
    MAIN endp           ;FIM DA MAIN PROC


GAME PROC
    MOV AH,02                   ;IMPRIME UM 'ENTER' PARA MELHOR VISUALIZAÇÃO DO JOGO
    MOV DL,10
    INT 21H

    SALVA_REGS BX,SI,CX         ;MACRO SALVA_REGS

    MOV CH,9            ;LINHA 
    XOR BX,BX           ;aponta pra linha
S2: 
    MOV CL,9            ;COLUNA
    XOR SI,SI           ;aponta pra coluna
S1:

    OR MATRIZ1[BX][SI],30H      ;DECIMAL -> CARACTER
    MOV AH,02
    MOV DL,MATRIZ1[BX][SI]      ;IMPRIME O ELEMENTO [BX][SI]
    AND MATRIZ1[BX][SI],0FH
    INT 21H 
    MOV DL,' '                  ;IMPRIME UM ESPAÇO ENTRE OS NÚMEROS
    INT 21H
    MOV DL,'|'

    CMP si,2                    ;SEPARA A 3° COLUNA DA 4° COLUNA
    JNZ PULA
    INT 21H
    MOV DL, ' '
    INT 21H
PULA:
    CMP si,5                    ;SEPARA A 6° COLUNA DA 7° COLUNA
    JNZ PULA1
    INT 21H
    MOV DL, ' '
    INT 21H
    JMP PULA2
PULA1:                      
    CMP si,8                    ;SEPARA A 8° COLUNA DA 9° COLUNA
    JNZ PULA2
    INT 21H
    MOV DL, ' '
    INT 21H
PULA2:
    INC SI                      ;VAI PARA O PROXIMO NÚMERO NA MATRIZ1
    DEC CL                      ;DECREMENTA O CONTADOR DE COLUNA 
    JNZ S1
    MOV AH,02
    MOV DL,10
    INT 21H
    MOV DL,'-'
    CMP BX,18
    JZ REPETE
    CMP BX,45
    JZ REPETE
    CMP BX,81
    JZ REPETE
    JMP PULE

REPETE:
    MOV DH,23
REPETE1:
    INT 21h
    DEC DH
    JNZ REPETE1
    MOV DL,10
    INT 21H
PULE:
    ADD BX,9
    DEC CH
    JNZ S2

    RESTAURA_REGS BX,SI,CX               ;MACRO RESTAURA_REGS

    RET                                  ;RETORNA PARA ONDE FOI FEITO A CHAMADA DO PROCEDIMENTO 1 (GAME) NA MAIN

GAME endp                                ;FINALIZAÇÃO DO PROCEDIMENTO 1 (GAME)

SUAVEZ PROC
    JMP AGAIN1                          ;PULA PARA AGAIN1
AGAIN:
    MOV AH,09                           ;IMPRIME UMA MENSAGEM CASO O ELEMENTO QUE O JOGADOR DESEJA SUBSTITUIR ESTEJA BLOQUEADO
    LEA DX,alert
    INT 21H
AGAIN1:
    MOV AH,09                           ;MENSAGEM PARA DIGITAR A LINHA
    LEA DX,msg1
    INT 21H
    MOV AH,01
    INT 21H
    CMP AL,13                           ;COMPARA COM O 'ENTER' (CONDIÇÃO DE PARADA)
    JE TERMINO
    AND AL,0FH                          ;CARACTER -> DECIMAL
    XOR AH,AH                           ;ZERA O REGISTRADOR AH
    DEC AX                              ;DECREMENTA 1 UNIDADE DE AX
    MOV CX,9
    MUL CX                              ;MULTIPLICA AX POR 9
    MOV BL,AL                           ;INSERE A LINHA DESEJADA EM BX

    MOV AH,09                           ;MENSAGEM PARA DIGITAR A COLUNA
    LEA DX,msg2 
    INT 21H
    MOV AH,01
    INT 21H
    AND AL,0FH                          ;CARACTER -> DECIMAL
    XOR AH,AH                           ;ZERA O REGISTRADOR AH
    DEC AX                              ;DECREMENTA 1 UNIDADE DE AX
    MOV SI,AX                           ;INSERE A COLUNA DESEJADA EM SI
         
    CMP MATRIZ1aux[BX][SI],1            ;COMPARA COM A MATRIZ AUXILIAR O NÚMERO 1 (PARA SABER SE É POSÍVEL ALTERAR O NÚMERO NAQUELA POSIÇÃO)
    JZ AGAIN
    MOV AH,09
    LEA DX,msg3
    INT 21H
    MOV AH,01                           ;INSERE O VALOR DESEJADO EM CX
    INT 21H
    AND AL,0FH
    MOV CL,AL
TERMINO:
    RET                                 ;RETORNA PARA ONDE FOI FEITO A CHAMADA DO PROCEDIMENTO 2 (SUAVEZ) NA MAIN
    

SUAVEZ ENDP                             ;FINALIZAÇÃO DO PROCEDIMENTO 2 (SUAVEZ)

VERIFICACAO PROC 
    
    CMP MATRIZ1resp[BX][SI],CL      ;COMPARA O ELEMNTO DA MATRIZ GABARITO DO JOGO 1 COM O VALOR QUE DESEJA ALTERAR
    JNE ERRADO                      ;SE ESTIVER DIFERENTE ELE PULA PARA ERRADO, SE FOR IGUAL ELE CONTINUA
    MOV MATRIZ1[BX][SI], CL         ;SUBSTITUI NA MATRIZ EXIBIDA PARA O JOGADOR O VALOR DESEJADO (VALOR CORRETO)
    MOV MATRIZ1aux[BX][SI], 1       ;COLOCA 1 NA POSIÇÃO ALTERADA, PARA NÃO CONSEGUIR ALTERAR MAIS O NÚMERO DEPOIS DE ACERTADO
    Mov ah, 09                      ;FUNÇÃO INT 10H PARA MOSTRAR UM CARACTER SOBRE O CURSOR COM ATRIBUTO (CARACTER VERDE)
    Mov bh, 00                      ;NÚMERO DA PÁGINA
    Mov cx, 1                       ;IMPRIMIR UMA VEZ
    Mov bl, 2                       ;COLORIR O CARACTER (COR VERDE)
    Int 10h         
    MOV AH,09                       ;PREPARANDO FUNÇÃO IMPRIMIR STRING
    LEA DX,msg4                     ;APONTA DX PARA O ENDEREÇO DO CONTEÚDO DE msg4
    INT 21h                         ;IMPRIME STRING msg4
    JMP AVANCA                      ;PULA PARA AVANCA
ERRADO:
    Mov ah, 09                      ;FUNÇÃO INT 10H PARA MOSTRAR UM CARACTER SOBRE O CURSOR COM ATRIBUTO (CARACTER VERMELHA)
    Mov bh, 00                      ;NÚMERO DA PÁGINA
    Mov cx, 1                       ;IMPRIMIR UMA VEZ
    Mov bl, 4                       ;COLORIR O CARACTER (COR VERMELHA)
    Int 10h
    MOV AH,09                       ;PREPARANDO FUNÇÃO IMPRIMIR STRING
    LEA DX,msg5                     ;APONTA DX PARA O ENDEREÇO DO CONTEÚDO DE msg4
    INT 21h                         ;IMPRIME STRING msg5
    

AVANCA:
    XOR BX,BX                       ;ZERA O REGISTRADOR BX
    XOR CX,CX                       ;ZERA O REGISTRADOR CX
    XOR SI,SI                       ;ZERA O REGISTRADOR SI
    RET                             ;RETORNA PARA ONDE FOI FEITO A CHAMADA DO PROCEDIMENTO 3 (VERIFICACAO) NA MAIN

VERIFICACAO ENDP                    ;FINALIZAÇÃO DO PROCEDIMENTO 3 (VERIFICACAO)

GAME2 PROC
    MOV AH,02                       ;IMPRIME UM 'ENTER' PARA MELHOR VISUALIZAÇÃO DO JOGO
    MOV DL,10
    INT 21H

    SALVA_REGS BX,SI,CX             ;MACRO SALVA_REGS
    MOV CH,9            ;LINHA 
    XOR BX,BX           ;aponta pra linha
X: 
    MOV CL,9            ;COLUNA
    XOR SI,SI           ;aponta pra coluna
Y:

    OR MATRIZ2[BX][SI],30H
    MOV AH,02
    MOV DL,MATRIZ2[BX][SI]      ;IMPRIME O ELEMENTO [BX][SI]
    AND MATRIZ2[BX][SI],0FH
    INT 21H 
    MOV DL,' '                  ;IMPRIME UM ESPAÇO ENTRE OS NÚMEROS
    INT 21H
    MOV DL,'|'

    CMP si,2                    ;SEPARA A 3° COLUNA DA 4° COLUNA
    JNZ Z
    INT 21H
    MOV DL, ' '
    INT 21H
Z:
    CMP si,5                    ;SEPARA A 6° COLUNA DA 7° COLUNA
    JNZ A
    INT 21H
    MOV DL, ' '
    INT 21H
    JMP B
A:                      
    CMP si,8                    ;SEPARA A 8° COLUNA DA 9° COLUNA
    JNZ B
    INT 21H
    MOV DL, ' '
    INT 21H
B:
    INC SI                      ;VAI PARA O PROXIMO NÚMERO NA MATRIZ1
    DEC CL                      ;DECREMENTA O CONTADOR DE COLUNA 
    JNZ Y
    MOV AH,02
    MOV DL,10
    INT 21H
    MOV DL,'-'
    CMP BX,18
    JZ C
    CMP BX,45
    JZ C
    CMP BX,81
    JZ C
    JMP AB

C:
    MOV DH,23
BC:
    INT 21h
    DEC DH
    JNZ BC
    MOV DL,10
    INT 21H
AB:
    ADD BX,9
    DEC CH
    JNZ X

    RESTAURA_REGS BX,SI,CX              ;MACRO RESTAURA_REGS

    RET                                 ;RETORNA PARA ONDE FOI FEITO A CHAMADA DO PROCEDIMENTO 4 (GAME2) NA MAIN

GAME2 endp                              ;FINALIZAÇÃO DO PROCEDIMENTO 4 (GAME2)

SUAVEZ2 PROC
    JMP AGAIN3                          ;PULA PARA AGAIN3  
AGAIN2:
    MOV AH,09                           ;IMPRIME UMA MENSAGEM CASO O ELEMENTO QUE O JOGADOR DESEJA SUBSTITUIR ESTEJA BLOQUEADO
    LEA DX,alert
    INT 21H
AGAIN3:
    MOV AH,09                           ;MENSAGEM PARA DIGITAR A LINHA
    LEA DX,msg1
    INT 21H
    MOV AH,01
    INT 21H
    CMP AL,13                           ;COMPARA COM O 'ENTER' (CONDIÇÃO DE PARADA)
    JE TERMINA
    AND AL,0FH                          ;CARACTER -> DECIMAL
    XOR AH,AH                           ;ZERA O REGISTRADOR AH
    DEC AX                              ;DECREMENTA 1 UNIDADE DE AX
    MOV CX,9                            
    MUL CX                              ;MULTIPLICA AX POR 9
    MOV BL,AL                           ;INSERE A LINHA DESEJADA EM BX

    MOV AH,09                           ;MENSAGEM PARA DIGITAR A COLUNA
    LEA DX,msg2
    INT 21H
    MOV AH,01
    INT 21H
    AND AL,0FH                          ;CARACTER -> DECIMAL
    XOR AH,AH                           ;ZERA O REGISTRADOR AH
    DEC AX                              ;DECREMENTA 1 UNIDADE DE AX
    MOV SI,AX                           ;INSERE A COLUNA DESEJADA EM SI

    CMP MATRIZ2aux[BX][SI],1            ;COMPARA COM A MATRIZ AUXILIAR O NÚMERO 1 (PARA SABER SE É POSÍVEL ALTERAR O NÚMERO NAQUELA POSIÇÃO)
    JZ AGAIN2
    MOV AH,09                           
    LEA DX,msg3
    INT 21H
    MOV AH,01                     
    INT 21H
    AND AL,0FH                          ;CARACTER -> DECIMAL
    MOV CL,AL                           ;INSERE O VALOR DESEJADO EM CX
TERMINA:
    RET                                 ;RETORNA PARA ONDE FOI FEITO A CHAMADA DO PROCEDIMENTO 5 (SUAVEZ2) NA MAIN
    

SUAVEZ2 ENDP                            ;FINALIZAÇÃO DO PROCEDIMENTO 5 (SUAVEZ2)

VERIFICACAO2 PROC
   
    CMP MATRIZ2resp[BX][SI],CL          ;COMPARA O ELEMNTO DA MATRIZ GABARITO DO JOGO 2 COM O VALOR QUE DESEJA ALTERAR
    JNE ERRADO2                         ;SE ESTIVER DIFERENTE ELE PULA PARA ERRADO2, SE FOR IGUAL ELE CONTINUA
    MOV MATRIZ2[BX][SI], CL             ;SUBSTITUI NA MATRIZ EXIBIDA PARA O JOGADOR O VALOR DESEJADO (VALOR CORRETO)
    MOV MATRIZ2aux[BX][SI], 1           ;COLOCA 1 NA POSIÇÃO ALTERADA, PARA NÃO CONSEGUIR ALTERAR MAIS O NÚMERO DEPOIS DE ACERTADO
    Mov ah, 09                          ;FUNÇÃO INT 10H PARA MOSTRAR UM CARACTER SOBRE O CURSOR COM ATRIBUTO (CARACTER VERDE)
    Mov bh, 00                          ;NÚMERO DA PÁGINA
    Mov cx, 1                           ;IMPRIMIR UMA VEZ
    Mov bl, 2                           ;COLORIR O CARACTER (COR VERDE)
    Int 10h
    MOV AH,09                           ;PREPARANDO FUNÇÃO IMPRIMIR STRING
    LEA DX,msg4                         ;APONTA DX PARA O ENDEREÇO DO CONTEÚDO DE msg4
    INT 21h                             ;IMPRIME STRING msg4
    JMP AVANCA1                         ;PULA PARA AVANCA1
ERRADO2:
    Mov ah, 09                          ;FUNÇÃO INT 10H PARA MOSTRAR UM CARACTER SOBRE O CURSOR COM ATRIBUTO (CARACTER VERMELHO)
    Mov bh, 00                          ;NÚMERO DA PÁGINA
    Mov cx, 1                           ;IMPRIMIR UMA VEZ
    Mov bl, 4                           ;COLORIR O CARACTER (COR VERMELHA)
    Int 10h
    MOV AH,09                           ;PREPARANDO FUNÇÃO IMPRIMIR STRING
    LEA DX,msg5                         ;APONTA DX PARA O ENDEREÇO DO CONTEÚDO DE msg5
    INT 21h                             ;IMPRIME STRING msg5
    

AVANCA1:
    XOR BX,BX                           ;ZERA O REGISTRADOR BX
    XOR CX,CX                           ;ZERA O REGISTRADOR CX
    XOR SI,SI                           ;ZERA O REGISTRADOR SI
    RET                                 ;RETORNA PARA ONDE FOI FEITO A CHAMADA DO PROCEDIMENTO 6 (VERIFICACAO2) NA MAIN

VERIFICACAO2 ENDP                       ;FINALIZAÇÃO DO PROCEDIMENTO 6 (VERIFICACAO2)

GAME3 PROC
    MOV AH,02                       ;IMPRIME UM 'ENTER' PARA MELHOR VISUALIZAÇÃO DO JOGO
    MOV DL,10
    INT 21H

    SALVA_REGS BX,SI,CX             ;MACRO SALVA_REGS
    MOV CH,9            ;LINHA 
    XOR BX,BX           ;aponta pra linha
X3: 
    MOV CL,9            ;COLUNA
    XOR SI,SI           ;aponta pra coluna
Y3:

    OR MATRIZ3[BX][SI],30H
    MOV AH,02
    MOV DL,MATRIZ3[BX][SI]      ;IMPRIME O ELEMENTO [BX][SI]
    AND MATRIZ3[BX][SI],0FH
    INT 21H 
    MOV DL,' '                  ;IMPRIME UM ESPAÇO ENTRE OS NÚMEROS
    INT 21H
    MOV DL,'|'

    CMP si,2                    ;SEPARA A 3° COLUNA DA 4° COLUNA
    JNZ Z3
    INT 21H
    MOV DL, ' '
    INT 21H
Z3:
    CMP si,5                    ;SEPARA A 6° COLUNA DA 7° COLUNA
    JNZ A3
    INT 21H
    MOV DL, ' '
    INT 21H
    JMP B3
A3:                      
    CMP si,8                    ;SEPARA A 8° COLUNA DA 9° COLUNA
    JNZ B3
    INT 21H
    MOV DL, ' '
    INT 21H
B3:
    INC SI                      ;VAI PARA O PROXIMO NÚMERO NA MATRIZ3
    DEC CL                      ;DECREMENTA O CONTADOR DE COLUNA 
    JNZ Y3
    MOV AH,02
    MOV DL,10
    INT 21H
    MOV DL,'-'
    CMP BX,18
    JZ C3
    CMP BX,45
    JZ C3
    CMP BX,81
    JZ C3
    JMP AB3

C3:
    MOV DH,23
BC3:
    INT 21h
    DEC DH
    JNZ BC3
    MOV DL,10
    INT 21H
AB3:
    ADD BX,9
    DEC CH
    JNZ X3

    RESTAURA_REGS BX,SI,CX              ;MACRO RESTAURA_REGS

    RET                                 ;RETORNA PARA ONDE FOI FEITO A CHAMADA DO PROCEDIMENTO 7 (GAME2) NA MAIN

GAME3 endp                              ;FINALIZAÇÃO DO PROCEDIMENTO 7 (GAME3)

SUAVEZ3 PROC
    JMP AGAIN5                          ;PULA PARA AGAIN5  
AGAIN4:
    MOV AH,09                           ;IMPRIME UMA MENSAGEM CASO O ELEMENTO QUE O JOGADOR DESEJA SUBSTITUIR ESTEJA BLOQUEADO
    LEA DX,alert
    INT 21H
AGAIN5:
    MOV AH,09                           ;MENSAGEM PARA DIGITAR A LINHA
    LEA DX,msg1
    INT 21H
    MOV AH,01
    INT 21H
    CMP AL,13                           ;COMPARA COM O 'ENTER' (CONDIÇÃO DE PARADA)
    JE TERMINA3
    AND AL,0FH                          ;CARACTER -> DECIMAL
    XOR AH,AH                           ;ZERA O REGISTRADOR AH
    DEC AX                              ;DECREMENTA 1 UNIDADE DE AX
    MOV CX,9                            
    MUL CX                              ;MULTIPLICA AX POR 9
    MOV BL,AL                           ;INSERE A LINHA DESEJADA EM BX

    MOV AH,09                           ;MENSAGEM PARA DIGITAR A COLUNA
    LEA DX,msg2
    INT 21H
    MOV AH,01
    INT 21H
    AND AL,0FH                          ;CARACTER -> DECIMAL
    XOR AH,AH                           ;ZERA O REGISTRADOR AH
    DEC AX                              ;DECREMENTA 1 UNIDADE DE AX
    MOV SI,AX                           ;INSERE A COLUNA DESEJADA EM SI

    CMP MATRIZ3aux[BX][SI],1            ;COMPARA COM A MATRIZ AUXILIAR O NÚMERO 1 (PARA SABER SE É POSÍVEL ALTERAR O NÚMERO NAQUELA POSIÇÃO)
    JZ AGAIN4
    MOV AH,09                           
    LEA DX,msg3
    INT 21H
    MOV AH,01                     
    INT 21H
    AND AL,0FH                          ;CARACTER -> DECIMAL
    MOV CL,AL                           ;INSERE O VALOR DESEJADO EM CX
TERMINA3:
    RET                                 ;RETORNA PARA ONDE FOI FEITO A CHAMADA DO PROCEDIMENTO 8 (SUAVEZ2) NA MAIN
    

SUAVEZ3 ENDP                            ;FINALIZAÇÃO DO PROCEDIMENTO 8 (SUAVEZ3)

VERIFICACAO3 PROC
   
    CMP MATRIZ3resp[BX][SI],CL          ;COMPARA O ELEMNTO DA MATRIZ GABARITO DO JOGO 3 COM O VALOR QUE DESEJA ALTERAR
    JNE ERRADO3                         ;SE ESTIVER DIFERENTE ELE PULA PARA ERRADO2, SE FOR IGUAL ELE CONTINUA
    MOV MATRIZ3[BX][SI], CL             ;SUBSTITUI NA MATRIZ EXIBIDA PARA O JOGADOR O VALOR DESEJADO (VALOR CORRETO)
    MOV MATRIZ3aux[BX][SI], 1           ;COLOCA 1 NA POSIÇÃO ALTERADA, PARA NÃO CONSEGUIR ALTERAR MAIS O NÚMERO DEPOIS DE ACERTADO
    Mov ah, 09                          ;FUNÇÃO INT 10H PARA MOSTRAR UM CARACTER SOBRE O CURSOR COM ATRIBUTO (CARACTER VERDE)
    Mov bh, 00                          ;NÚMERO DA PÁGINA
    Mov cx, 1                           ;IMPRIMIR UMA VEZ
    Mov bl, 2                           ;COLORIR O CARACTER (COR VERDE)
    Int 10h
    MOV AH,09                           ;PREPARANDO FUNÇÃO IMPRIMIR STRING
    LEA DX,msg4                         ;APONTA DX PARA O ENDEREÇO DO CONTEÚDO DE msg4
    INT 21h                             ;IMPRIME STRING msg4
    JMP AVANCA2                         ;PULA PARA AVANCA1
ERRADO3:
    Mov ah, 09                          ;FUNÇÃO INT 10H PARA MOSTRAR UM CARACTER SOBRE O CURSOR COM ATRIBUTO (CARACTER VERMELHO)
    Mov bh, 00                          ;NÚMERO DA PÁGINA
    Mov cx, 1                           ;IMPRIMIR UMA VEZ
    Mov bl, 4                           ;COLORIR O CARACTER (COR VERMELHA)
    Int 10h
    MOV AH,09                           ;PREPARANDO FUNÇÃO IMPRIMIR STRING
    LEA DX,msg5                         ;APONTA DX PARA O ENDEREÇO DO CONTEÚDO DE msg5
    INT 21h                             ;IMPRIME STRING msg5
    

AVANCA2:
    XOR BX,BX                           ;ZERA O REGISTRADOR BX
    XOR CX,CX                           ;ZERA O REGISTRADOR CX
    XOR SI,SI                           ;ZERA O REGISTRADOR SI
    RET                                 ;RETORNA PARA ONDE FOI FEITO A CHAMADA DO PROCEDIMENTO 6 (VERIFICACAO2) NA MAIN

VERIFICACAO3 ENDP                       ;FINALIZAÇÃO DO PROCEDIMENTO 9 (VERIFICACAO2)

END MAIN



               
